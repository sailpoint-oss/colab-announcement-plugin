/*
Project - Announcement
Version - 3.1
Author - Shandeep - https://www.linkedin.com/in/shandeepsrinivas/
*/

.announcementNoAnimation {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
  text-align: center;
}

.announcementNoAnimation p {
  opacity: 1;
}

.announcementRightToLeft {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
}
.announcementRightToLeft p {
  display: inline-block;
  padding-left: 100%;
  animation: announcementRightToLeft 20s linear infinite;
}
@keyframes announcementRightToLeft {
  0%   { transform: translate(0, 0); }
  100% { transform: translate(-100%, 0); }
}

.announcementLeftToRight {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
}
.announcementLeftToRight p {
  display: inline-block;
  padding-left: 100%;
  animation: announcementLeftToRight 20s linear infinite;
}
@keyframes announcementLeftToRight {
  0%   { transform: translate(-100%, 0); }
  100% { transform: translate(0, 0); }
}

.announcementTopToBottom {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
  height: 100%;
}
.announcementTopToBottom p {
  text-align: center;
  margin: 0;
  animation: announcementTopToBottom 10s linear infinite;
  padding-bottom: 3%;
}
@keyframes announcementTopToBottom {
  0%   { transform: translate(0, -20%); }
  100% { transform: translate(0, 110%); }
}

.announcementBottomToTop {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
  height: 100%;
}
.announcementBottomToTop p {
  text-align: center;
  margin: 0;
  animation: announcementBottomToTop 10s linear infinite;
  padding-bottom: 3%;
}
@keyframes announcementBottomToTop {
  0%   { transform: translate(0, 110%); }
  100% { transform: translate(0, -20%); }
}

.announcementBounce {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
}
.announcementBounce p {
  display: inline-block;
  padding-left: 100%;
  animation: announcementBounce 20s linear infinite alternate;
}

@keyframes announcementBounce {
  0%   { transform: translate(0, 0); }
  100% { transform: translate(-100%, 0); }
}

.announcementPauseOnHover:hover > p {
  animation-play-state: paused;
}
.announcementPauseOnHover:hover {
  animation: announcementKfUnFade 2s linear;
}

.announcementFade {
  opacity: 1;
  animation: announcementKfFade 2s linear infinite;
}

@keyframes announcementKfUnFade {
  0%,100% { opacity: 1 }
  50% { opacity: 1 }
}

@keyframes announcementKfFade {
  0%,100% { opacity: 0 }
  50% { opacity: 1 }
}